PRAGMA foreign_keys = ON;

CREATE TABLE info (
	title TEXT
);


CREATE TABLE intro (
	id INTEGER PRIMARY KEY,
	ttext TEXT,
	img TEXT,
	media TEXT,
	sec INTEGER NOT NULL DEFAULT 0 CHECK (sec>=0),
	levelMin INTEGER NOT NULL DEFAULT 0 CHECK(levelMin>=0),
	levelMax INTEGER NOT NULL DEFAULT 0 CHECK(levelMax>=0)
);

CREATE TABLE campaign (
	id INTEGER PRIMARY KEY,
	num INTEGER NOT NULL DEFAULT 0,
	name TEXT
);

CREATE TABLE campaignLock (
	id INTEGER PRIMARY KEY,
	campaignId INTEGER NOT NULL REFERENCES campaign(id) ON DELETE CASCADE ON UPDATE CASCADE,
	lockId INTEGER NOT NULL REFERENCES campaign(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CHECK (campaignId<>lockId) UNIQUE (campaignId, lockId)
);

CREATE TABLE mission (
	id INTEGER PRIMARY KEY,
	name TEXT
);

CREATE TABLE missionLevel (
	id INTEGER PRIMARY KEY,
	missionid INTEGER NOT NULL REFERENCES mission(id) ON DELETE CASCADE ON UPDATE CASCADE,
	level INTEGER NOT NULL CHECK (level>0),
	sec INTEGER NOT NULL CHECK (sec>0),
	hp INTEGER NOT NULL CHECK (hp>0),
	mode INTEGER NOT NULL DEFAULT 0 CHECK (mode>=0),
	UNIQUE(missionid, level)
);

CREATE TABLE summary (
	id INTEGER PRIMARY KEY,
	campaignid INTEGER NOT NULL REFERENCES campaign(id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE(campaignid)
);

CREATE TABLE summaryLevel (
	id INTEGER PRIMARY KEY,
	summaryid INTEGER NOT NULL REFERENCES summary(id) ON DELETE CASCADE ON UPDATE CASCADE,
	level INTEGER NOT NULL CHECK (level>0),
	sec INTEGER NOT NULL CHECK (sec>0),
	hp INTEGER NOT NULL CHECK (hp>0),
	UNIQUE(summaryid, level)
);

CREATE TABLE bindCampaignMission (
	campaignid INTEGER NOT NULL REFERENCES campaign(id) ON DELETE CASCADE ON UPDATE CASCADE,
	missionid INTEGER NOT NULL REFERENCES mission(id) ON DELETE CASCADE ON UPDATE CASCADE,
	num INTEGER NOT NULL DEFAULT 0,
	UNIQUE (campaignid, missionid)
);

CREATE TABLE storage (
	id INTEGER PRIMARY KEY,
	name TEXT,
	module TEXT NOT NULL,
	data TEXT
);

CREATE TABLE bindMissionStorage (
	missionid INTEGER NOT NULL REFERENCES mission(id) ON DELETE CASCADE ON UPDATE CASCADE,
	storageid INTEGER NOT NULL REFERENCES storage(id) ON DELETE CASCADE ON UPDATE CASCADE,
	num INTEGER NOT NULL DEFAULT 0,
	UNIQUE (missionid, storageid)
);

CREATE TABLE bindSummaryStorage (
	summaryid INTEGER NOT NULL REFERENCES mission(id) ON DELETE CASCADE ON UPDATE CASCADE,
	storageid INTEGER NOT NULL REFERENCES storage(id) ON DELETE CASCADE ON UPDATE CASCADE,
	UNIQUE (summaryid, storageid)
);



CREATE TABLE bindIntroCampaign (
	introid INTEGER NOT NULL REFERENCES intro(id) ON DELETE CASCADE ON UPDATE CASCADE,
	campaignid INTEGER NOT NULL REFERENCES campaign(id) ON DELETE CASCADE ON UPDATE CASCADE,
	outro BOOL NOT NULL DEFAULT false,
	UNIQUE(introid, campaignid, outro)
);


CREATE TABLE bindIntroMission (
	introid INTEGER NOT NULL REFERENCES intro(id) ON DELETE CASCADE ON UPDATE CASCADE,
	missionid INTEGER NOT NULL REFERENCES mission(id) ON DELETE CASCADE ON UPDATE CASCADE,
	outro BOOL NOT NULL DEFAULT false,
	UNIQUE(introid, missionid, outro)
);

CREATE TABLE bindIntroSummary (
	introid INTEGER NOT NULL REFERENCES intro(id) ON DELETE CASCADE ON UPDATE CASCADE,
	summaryid INTEGER NOT NULL REFERENCES summary(id) ON DELETE CASCADE ON UPDATE CASCADE,
	outro BOOL NOT NULL DEFAULT false,
	UNIQUE(introid, summaryid, outro)
);


CREATE TABLE objective (
	id INTEGER PRIMARY KEY,
	storageid INTEGER REFERENCES storage(id) ON DELETE CASCADE ON UPDATE CASCADE,
	level INTEGER NOT NULL DEFAULT 1 CHECK(level>0),
	module TEXT NOT NULL,
	data TEXT
);

